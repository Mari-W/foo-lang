struct Struct {
    t: (Int, Int)
}
enum Enum {
    Tup((Int, Int)),
    Rec(Struct),
    Unit
}

fn extract(e: Enum) -> Int {
    match e {
        Enum::Tup((x, 42)) | Enum::Tup((_, x)) => x,
        Enum::Rec(Struct { t: (x, y) }) => x + y,
        _ => 42
    }
}